#!/bin/bash

out_dir=test_out/
rm -rf $out_dir
mkdir -p $out_dir

source bin/stack_functions

export CONTROLLER_NAME=127.0.0.1

TEST_RESULTS=${TEST_RESULTS:-$out_dir/test_stack.out}
GOLDEN_RESULTS=etc/test_stack.out
TCPSUDO="sudo tcpdump"
controllers=`sudo ovs-vsctl get-controller t1sw1`

local=
if [ "$1" == local ]; then
    local=y
    shift
fi

bridges=$(sudo ovs-vsctl show | fgrep Bridge | wc -l)
if [ $bridges != 6 ]; then
    echo System misconfiguration: found $bridges bridges, expected 6.
    exit 2
fi

containers=$(docker ps  | fgrep forch- | wc -l)
if [ $containers != 7 ]; then
    echo System misconfiguration: found $containers containers, expected 7.
    exit 2
fi

cap_base=10
ping_count=10
num_pairs=12
cap_length=$((cap_base + ping_count + num_pairs * 2))

faucet_log=inst/forch-faucet-1/faucet.log
forch_log=inst/forch-faucet-1/forch.log

#################################################################################

echo Capturing $faucet_log...
rm -f $faucet_log
tail --retry -f $faucet_log &

reset_stack

if [ -n "$local" ]; then
    echo Restarting Faucet | tee -a $TEST_RESULTS
    docker restart forch-faucet-1
    docker exec forch-faux-1 ping -c 3 192.168.1.2
fi

# Test that the 'local' mode of faucet is working properly.
echo 'print("supercalifragilisticexpialidocious")' > faucet/faucet/python_test.py
docker exec forch-faucet-1 python -m faucet.python_test 2>&1 | tee -a $TEST_RESULTS
rm faucet/faucet/python_test.py

restart_forch

# Basic one-time test of web-server and config
curl http://$CONTROLLER_NAME:9019/index.html > $out_dir/index.html
fgrep "Network Operations Administrative Helper" $out_dir/index.html || exit 1
curl http://$CONTROLLER_NAME:9019/protos.html > $out_dir/protos.html
fgrep "forch/proto/system_state.proto" $out_dir/protos.html || exit 1
curl http://$CONTROLLER_NAME:9019/sys_config > $out_dir/sys_config.json
jq '.faucet.dps."nz-kiwi-t2sw3"'.faucet_dp_mac $out_dir/sys_config.json | tee -a $TEST_RESULTS

echo %%% initial solid state | tee -a $TEST_RESULTS
test_stack -solid
test_forch -solid

echo %%% healthy state | tee -a $TEST_RESULTS
sudo ip addr add 240.0.0.1/24 dev lo
sudo ip addr add 240.0.0.2/24 dev lo
sudo ip addr add 240.0.0.253/24 dev lo
sleep 50.3231 &
sleep 32
test_forch -healthy

reset_stack
sleep 32

echo %%% t2sw3 down, cpn nz-kiwi-ctl1 up, t1sw1-eth9 down | tee -a $TEST_RESULTS
sudo ovs-vsctl del-controller t2sw3
sudo ip addr add 240.0.0.253/24 dev lo
sudo ip link set t1sw1-eth9 down
test_stack -linkd

echo %%% t1sw1-eth10 down | tee -a $TEST_RESULTS
sudo ip link set t1sw2-eth10 down
test_stack -twod
sleep 50.3231 &
sleep 32
test_forch -twod

echo %%% t2sw3 up, cpn nz-kiwi-t2sw2 up, t1sw1-eth6 down, t1sw1-eth11 down | tee -a $TEST_RESULTS
sudo ovs-vsctl set-controller t2sw3 $controllers
sudo ip addr add 240.0.0.1/24 dev lo
sudo ip link set t1sw2-eth28 down
sudo ip link set t1sw1-eth6 down
sudo ip link set t1sw1-eth11 down
test_stack -broken
test_forch -broken

echo %%% cpn t2sw2 down, t1sw1:10 down, t1sw2:10 up, t1sw1:6 up, t2sw3 swapped | tee -a $TEST_RESULTS
sudo ip addr add 240.0.0.2/24 dev lo
sudo ip link set t1sw1-eth10 down
sudo ip link set t1sw2-eth10 up
sudo ip link set t1sw1-eth6 up
del_link t1sw1 11 t2sw3 50
del_link t1sw2 11 t2sw3 52
add_link t1sw1 11 t2sw3 52
add_link t1sw2 11 t2sw3 50
test_stack -restored
test_forch -restored

echo %%% reset stack | tee -a $TEST_RESULTS
restart_ovs
reset_stack
sleep 32
test_forch -reset

echo Killing forch...
sudo kill `ps ax | fgrep forch | awk '{print $1}'`
kill `ps ax | $faucet_log | fgrep -v fgrep | awk '{print $1}'`
kill `ps ax | $forch_log | fgrep -v fgrep | awk '{print $1}'`

echo
echo '########## Begin complete test results ##########'
cat $TEST_RESULTS
echo '########## End complete test_results ##########'
echo
echo Comparing $GOLDEN_RESULTS with $TEST_RESULTS
diff -b $GOLDEN_RESULTS $TEST_RESULTS
result=$?

echo Result diff returned $result
exit $result
