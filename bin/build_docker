#!/bin/bash -e

FAUCET_REPO=https://github.com/grafnu/faucet.git
FAUCET_HASH=$(cat etc/FAUCET_VERSION)
docker_args=
mkdir -p build

docker rmi -f forch/faux forch/faucet forch/gauge || true
images=$(docker images | fgrep forch/ | wc -l)
if [ $images != 0 ]; then
    echo Unexpected forch/ images found:
    docker images | fgrep forch/
fi

echo Building faux...
docker build -t forch/faux -f etc/Dockerfile.faux . > build/docker_faux.log &

if [ -d faucet ]; then
    echo Faucet already exists. Not cloning.
    faucet_ver=$(cd faucet; git rev-parse HEAD)
    if [ "$faucet_ver" != $FAUCET_HASH ]; then
        echo Local faucet version not as expected.
        echo $FAUCET_HASH from etc/FAUCET_VERSION
        echo $faucet_ver in faucet/
        false
    fi
else
    echo Cloning faucet locally...
    git clone $FAUCET_REPO faucet
    (cd faucet; git checkout $FAUCET_HASH)
fi

faucet_ver=$(cd faucet; git rev-parse HEAD)

docker_args+=--label=FAUCET=$faucet_ver

echo Building faucet and gauge...
docker build -t forch/faucet $docker_args -f etc/Dockerfile.faucet . > build/docker_faucet.log &
docker build -t forch/gauge $docker_args -f etc/Dockerfile.gauge . > build/docker_gauge.log &

echo Waiting for builds to complete.
wait

tail build/docker_*.log

images=$(docker images | fgrep forch/ | wc -l)
if [ $images != 3 ]; then
    echo Did not find expected 3 forch images:
    docker images | fgrep forch/
    false
fi

echo Done with successful docker build.
